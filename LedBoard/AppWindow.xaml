<mah:MetroWindow
	x:Class="LedBoard.AppWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:ic="http://metro.mahapps.com/winfx/xaml/iconpacks"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:LedBoard"
	xmlns:controls="clr-namespace:LedBoard.Controls"
	xmlns:c="clr-namespace:LedBoard.Converters"
	xmlns:m="clr-namespace:LedBoard.Models"
	xmlns:p="clr-namespace:LedBoard.Properties"
	xmlns:vm="clr-namespace:LedBoard.ViewModels"
	xmlns:v="clr-namespace:LedBoard.Views"
    mc:Ignorable="d"
	d:DataContext="{d:DesignInstance Type={x:Type vm:ShellViewModel}, IsDesignTimeCreatable=False}"
	Title="Led Board" ResizeMode="CanResizeWithGrip" Icon="Assets/app.png"
	Height="{Binding Source={x:Static p:Settings.Default}, Path=DesktopHeight, Mode=TwoWay}"
	Width="{Binding Source={x:Static p:Settings.Default}, Path=DesktopWidth, Mode=TwoWay}"
	Left="{Binding Source={x:Static p:Settings.Default}, Path=DesktopX, Mode=TwoWay}"
	Top="{Binding Source={x:Static p:Settings.Default}, Path=DesktopY, Mode=TwoWay}">
	<mah:MetroWindow.Resources>
		<c:NullToVisibilityConverter x:Key="nullToVisibilityConverter" />
		<c:IsNullConverter x:Key="isNullConverter" />
		<DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type vm:MenuItemViewModel}">
			<Grid Height="48">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<ContentControl Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Icon}" Focusable="False" />
				<TextBlock Grid.Column="1" VerticalAlignment="Center" FontSize="16" Text="{Binding Label}" />
			</Grid>
		</DataTemplate>
		<mah:CustomDialog x:Key="MessageDialog" d:DataContext="{d:DesignInstance Type={x:Type vm:MessageDialogViewModel}}" Title="{Binding Title}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="*" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>
				<ic:PackIconFontAwesome Margin="8" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Top">
					<ic:PackIconFontAwesome.Style>
						<Style TargetType="ic:PackIconFontAwesome">
							<Setter Property="Visibility" Value="Collapsed" />
							<Setter Property="Width" Value="24" />
							<Setter Property="Height" Value="24" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding IconType}" Value="{x:Static vm:MessageDialogIconType.Error}">
									<Setter Property="Visibility" Value="Visible" />
									<Setter Property="Kind" Value="TimesCircleSolid" />
									<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Control.Validation}" />
								</DataTrigger>
								<DataTrigger Binding="{Binding IconType}" Value="{x:Static vm:MessageDialogIconType.Warning}">
									<Setter Property="Visibility" Value="Visible" />
									<Setter Property="Kind" Value="ExclamationTriangleSolid" />
									<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Control.Validation}" />
								</DataTrigger>
								<DataTrigger Binding="{Binding IconType}" Value="{x:Static vm:MessageDialogIconType.Info}">
									<Setter Property="Visibility" Value="Visible" />
									<Setter Property="Kind" Value="InfoCircleSolid" />
									<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</ic:PackIconFontAwesome.Style>
				</ic:PackIconFontAwesome>
				<TextBlock Margin="0,8,8,8" Grid.Column="1" Grid.Row="0" Text="{Binding Message}" TextWrapping="Wrap" />
				<Expander Margin="0,0,8,8" Grid.Column="1" Grid.Row="1" IsExpanded="False" Header="Detailed Message" Visibility="{Binding DetailedMessage, Converter={StaticResource nullToVisibilityConverter}}">
					<Border BorderThickness="1" BorderBrush="Black" Background="LightGray">
						<ScrollViewer HorizontalScrollBarVisibility="auto" VerticalScrollBarVisibility="auto" Padding="8">
							<TextBlock Text="{Binding DetailedMessage}" FontFamily="Courier New" FontSize="10" TextWrapping="NoWrap" />
						</ScrollViewer>
					</Border>
				</Expander>
				<Button Margin="0,0,8,8" HorizontalAlignment="Right" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Click="OnCloseMessageDialog" Style="{StaticResource MahApps.Styles.Button.Dialogs}">OK</Button>
			</Grid>
		</mah:CustomDialog>
		<x:Array x:Key="MenuItems" Type="{x:Type vm:MenuItemViewModel}">
			<vm:MenuItemViewModel Label="Project Settings" NavigationType="{x:Type v:ProjectSettingsPage}" Command="{Binding Source={x:Reference hamburgerMenu}, Path=DataContext.NavigateProjectSettingsCommand}">
				<vm:MenuItemViewModel.Icon>
					<ic:PackIconFontAwesome Width="28" Height="28" Kind="FileRegular" />
				</vm:MenuItemViewModel.Icon>
			</vm:MenuItemViewModel>
			<vm:MenuItemViewModel Label="Timeline" NavigationType="{x:Type v:ProjectPage}" Command="{Binding Source={x:Reference hamburgerMenu}, Path=DataContext.NavigateProjectEditorCommand}">
				<vm:MenuItemViewModel.Icon>
					<ic:PackIconFontAwesome Width="28" Height="28" Kind="FilmSolid" RotationAngle="90" />
				</vm:MenuItemViewModel.Icon>
			</vm:MenuItemViewModel>
			<vm:MenuItemViewModel Label="Viewer" NavigationType="{x:Type v:ViewerPage}" Command="{Binding Source={x:Reference hamburgerMenu}, Path=DataContext.NavigateViewerCommand}">
				<vm:MenuItemViewModel.Icon>
					<ic:PackIconFontAwesome Width="28" Height="28" Kind="DesktopSolid" />
				</vm:MenuItemViewModel.Icon>
			</vm:MenuItemViewModel>
			<vm:MenuItemViewModel Label="Export" NavigationType="{x:Type v:ExportPage}" Command="{Binding Source={x:Reference hamburgerMenu}, Path=DataContext.NavigateExportCommand}">
				<vm:MenuItemViewModel.Icon>
					<ic:PackIconFontAwesome Width="28" Height="28" Kind="FileExportSolid" />
				</vm:MenuItemViewModel.Icon>
			</vm:MenuItemViewModel>
		</x:Array>
		<x:Array x:Key="OptionsMenuItems" Type="{x:Type vm:MenuItemViewModel}">
			<vm:MenuItemViewModel Label="Settings" NavigationType="{x:Type v:SettingsPage}" Command="{Binding Source={x:Reference hamburgerMenu}, Path=DataContext.NavigateSettingsCommand}">
				<vm:MenuItemViewModel.Icon>
					<ic:PackIconFontAwesome Width="28" Height="28" Kind="WrenchSolid" />
				</vm:MenuItemViewModel.Icon>
			</vm:MenuItemViewModel>
		</x:Array>
	</mah:MetroWindow.Resources>
	<mah:HamburgerMenu x:Name="hamburgerMenu" DisplayMode="CompactOverlay"
					   ItemTemplate="{StaticResource MenuItemTemplate}"
					   ItemsSource="{StaticResource MenuItems}"
					   OptionsItemTemplate="{StaticResource MenuItemTemplate}"
					   OptionsItemsSource="{StaticResource OptionsMenuItems}">
		<mah:HamburgerMenu.Content>
			<DockPanel LastChildFill="True">
				<StatusBar DockPanel.Dock="Bottom" Style="{StaticResource MahApps.Styles.StatusBar}" Visibility="{Binding ProjectPath, Converter={StaticResource nullToVisibilityConverter}}">
					<StatusBarItem Content="{Binding ProjectPath}" />
					<Separator Style="{StaticResource MahApps.Styles.Separator.StatusBar}" />
					<StatusBarItem>
						<StatusBarItem.Style>
							<Style TargetType="StatusBarItem" BasedOn="{StaticResource MahApps.Styles.StatusBarItem}">
								<Setter Property="Content" Value="All changes saved" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsDirty}" Value="True">
										<Setter Property="Content" Value="Project has unsaved changes" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StatusBarItem.Style>
					</StatusBarItem>
				</StatusBar>
				<Frame Source="{Binding CurrentPage}" Navigated="OnFrameNavigated">
					<Frame.Style>
						<Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
							<Setter Property="ClipToBounds" Value="True" />
							<Setter Property="NavigationUIVisibility" Value="Hidden" />
							<Setter Property="ContentTemplate">
								<Setter.Value>
									<DataTemplate>
										<mah:TransitioningContentControl Content="{Binding}" RestartTransitionOnContentChange="True" Transition="Default" />
									</DataTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Frame.Style>
				</Frame>
			</DockPanel>
		</mah:HamburgerMenu.Content>
	</mah:HamburgerMenu>
</mah:MetroWindow>